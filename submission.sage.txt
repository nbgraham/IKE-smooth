# Nick Graham 113038384
# Andrew Shaffer 112892539
# Dragon Tran 112915298
# Addison Womack 112950627

# Running time: 108004 seconds

p = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE65381FFFFFFFFFFFFFFFF
pField = Integers(p)

pl = 3404566950388147231575375237526708869801547741720080536183077664406559611110756646409431501117041816965177592956160013467006578747709422599607103461960311840193695514006314632197671819711827705399229918744335140961803770012594815040659519002230709143735944189
A = 1129506271130383841129152981128925390888856182

primes = [5, 17, 127, 1847, 13163, 27901, 73673, 651179, 4520279, 5129581, 5639729, pl]
for prime in primes:
    assert(is_prime(prime))

assert(pField(2)^A == pField(5 * 17 * 127 * 1847 * 13163 * 27901 * 73673 * 651179 * 4520279 * 5129581 * 5639729 * pl))
print 'pl bit length:', len(pl.binary())