
# This file was *autogenerated* from the file prime_test.sage
from sage.all_cmdline import *   # import sage library

_sage_const_100 = Integer(100); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_10 = Integer(10); _sage_const_10000 = Integer(10000)
small_primes = primes_first_n(_sage_const_100 )

def test(n):
    if n < _sage_const_1 : return None

    max_p = _sage_const_0 
    max_p_fact = float("inf")
    
    for fac in small_primes:
        while n % fac == _sage_const_0 :
            n = n // fac
            max_p = fac

    if n ==_sage_const_1  or is_pseudoprime(n) and is_prime(n):
        max_p_fact = max(n, max_p)
        
    return max_p_fact


def test2(n):
    if n < _sage_const_1 : return None

    max_p = _sage_const_0 
    max_p_fact = float("inf")
    
    if n ==_sage_const_1  or is_pseudoprime(n) and is_prime(n):
        return n

    for fac in small_primes:
        while n % fac == _sage_const_0 :
            n = n // fac
            max_p = fac

    if n ==_sage_const_1  or is_pseudoprime(n) and is_prime(n):
        max_p_fact = max(n, max_p)

    return max_p_fact

import time

start = time.time()
for i in range(_sage_const_10 ):
    for i in range(_sage_const_1 ,_sage_const_10000 ):
        test(i)
print time.time() - start

start = time.time()
for i in range(_sage_const_10 ):
    for i in range(_sage_const_1 ,_sage_const_10000 ):
        test2(i)
print time.time() - start

